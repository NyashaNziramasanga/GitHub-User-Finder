{"version":3,"sources":["components/layout/spinner.gif","context/github/githubState.js","components/pages/About.js","context/alert/alertContext.js","components/layout/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/alertState.js","context/github/githubContext.js","context/github/githubReducer.js","components/users/Search.js","components/layout/Spinner.js","components/users/UserItem.js","components/users/Users.js","components/pages/Home.js","components/layout/Navbar.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/pages/NotFound.js","App.js","index.js"],"names":["module","exports","githubClientId","githubSecrete","About","alertContext","createContext","Alert","alert","useContext","AlertContext","className","type","msg","state","action","payload","AlertState","props","useReducer","AlertReducer","dispatch","Provider","value","setAlert","setTimeout","children","githubContext","users","loading","user","repos","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","GithubReducer","searchUsers","text","a","setLoading","axios","get","res","data","items","getUser","username","getUserRepos","clearUsers","Search","GithubContext","useState","setText","style","marginTop","onSubmit","e","preventDefault","name","placeholder","onChange","target","length","onClick","Spinner","src","spinner","alt","width","margin","display","UserItem","login","avatar_url","to","userStyle","gridTemplateColumns","gridGap","Users","map","key","id","Home","Navbar","title","RepoItem","repo","rel","href","html_url","description","language","Repos","User","match","useEffect","params","location","bio","company","blog","followers","following","public_repos","public_gists","hireable","NotFound","textAlign","role","aria-label","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17ea6df0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9b16f8b8.gif\";","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\n\nimport {\n  SEARCH_USERS,\n  GET_USER,\n  CLEAR_USERS,\n  GET_REPOS,\n  SET_LOADING\n} from '../types';\n\nlet githubClientId;\nlet githubSecrete;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubSecrete = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubSecrete = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //Search Github users\n  const searchUsers = async (text) => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubSecrete}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  //Get single Github user\n  const getUser = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubSecrete}`\n    );\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  // Get User Repos\n  const getUserRepos = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=50&sort=updated&client_id=${githubClientId}&client_secret=${githubSecrete}`\n    );\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n\n  //Clear Users from state\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      // Available to the entire app\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>App to search GitHub Users</p>\n      <p>Version 1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alert = () => {\n  const { alert } = useContext(AlertContext);\n  return (\n    alert && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className=\"fas fa-info-circle\" /> {alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n    case REMOVE_ALERT:\n      return null;\n    default:\n      return state;\n  }\n};\n","export const SEARCH_USERS = 'SEARCH_USERS';\nexport const GET_USER = 'GET_USER';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = null;\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  //  Set Alert\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type }\n    });\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 4000);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import { createContext } from 'react';\n\nconst githubContext = createContext();\n\nexport default githubContext;\n","import {\n  SEARCH_USERS,\n  GET_USER,\n  CLEAR_USERS,\n  GET_REPOS,\n  SET_LOADING\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Search = () => {\n  const { searchUsers, users, clearUsers } = useContext(GithubContext);\n  const { setAlert } = useContext(AlertContext);\n\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text === '' || text === null) {\n      setAlert('Please enter something', 'danger');\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = (e) => setText(e.target.value);\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <form onSubmit={onSubmit} className=\"forms\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Search\"\n          value={text}\n          onChange={onChange}\n        />\n        <button\n          type=\"submit\"\n          value=\"search\"\n          className=\"fas fa-search btn search-btn\"\n        />\n\n        {users.length > 0 && (\n          <button className=\"btn btn-light btn-block\" onClick={clearUsers}>\n            Clear\n          </button>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => {\n  return (\n  <Fragment>\n    <img src={spinner} alt=\"Loading...\" style={{ width: '200px', margin: 'auto', display: 'block' }} />\n  </Fragment>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction UserItem({ user: { login, avatar_url } }) {\n  return (\n    <div className=\"card text-center\">\n      <img src={avatar_url} alt=\"\" className=\"round-img\" style={{ width: '60px' }} />\n      <h3>{login}</h3>\n      <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm\">\n        More\n      </Link>\n    </div>\n  );\n}\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default UserItem;\n","import GithubContext from '../../context/github/githubContext';\nimport React, { useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport UserItem from './UserItem';\n\nconst Users = () => {\n  const { loading, users } = useContext(GithubContext);\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3,1fr)',\n  gridGap: '1rem'\n};\n\nexport default Users;\n","import React, { Fragment } from 'react';\nimport Search from '../users/Search';\nimport Users from '../users/Users';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Search />\n      <Users />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar({ title }) {\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <i className=\"fab fa-github\" /> {title}\n      </h1>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\nexport default Navbar;\n","import React from 'react';\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className=\"repo-card\">\n      <h3>\n        <a target=\"_blank\" rel=\"noreferrer noopener\" href={repo.html_url}>\n          {repo.name}\n        </a>\n      </h3>\n      <p>{repo.description}</p>\n      {repo.language ? (\n        <div className=\"badge badge-secondary\">{repo.language}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React from 'react';\nimport RepoItem from './RepoItem';\n\nconst Repos = ({ repos }) => {\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n};\n\nexport default Repos;\n","import { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\n\nconst User = ({ match }) => {\n  const { getUserRepos, repos, getUser, loading, user } = useContext(\n    GithubContext\n  );\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n    // eslint-disable-next-line\n  }, []);\n\n  const {\n    name,\n    login,\n    avatar_url,\n    location,\n    bio,\n    company,\n    blog,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-light\">\n        Back To Search\n      </Link>\n      Hireable:{' '}\n      {hireable ? (\n        <i className=\"fas fa-check text-success\" />\n      ) : (\n        <i className=\"fas fa-times-circle text-danger\" />\n      )}\n      <div className=\"card grid-2\">\n        <div className=\"all-center\">\n          <img\n            src={avatar_url}\n            alt=\"\"\n            className=\"round-img\"\n            style={{ width: '150px' }}\n          />\n          <h1>{name}</h1>\n          <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a\n            href={html_url}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            className=\"btn btn-primary my-1\"\n          >\n            <i className=\"fas fa-external-link-alt\"></i> Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong> Username:</strong> {login}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong> Company:</strong> {company}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong> Website:</strong> {blog}\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card text-center\">\n        <div className=\"badge badge-secondary\">Followers: {followers}</div>\n        <div className=\"badge badge-secondary\">Followers: {following}</div>\n        <div className=\"badge badge-secondary\">\n          Public Repos: {public_repos}\n        </div>\n        <div className=\"badge badge-secondary\">\n          Public Gists: {public_gists}\n        </div>\n      </div>\n      <div className=\"card-grid\">\n        <Repos repos={repos} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default User;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Not Found</h1>\n      <p className=\"lead\">\n        404 Page not found{' '}\n        <span role=\"img\" aria-label=\"sad\">\n          😓\n        </span>\n      </p>{' '}\n    </div>\n  );\n};\nexport default NotFound;\n","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport About from './components/pages/About';\r\nimport Alert from './components/layout/Alert';\r\nimport AlertState from './context/alert/alertState';\r\nimport GithubState from './context/github/githubState';\r\nimport Home from './components/pages/Home';\r\nimport Navbar from './components/layout/Navbar';\r\nimport React from 'react';\r\nimport User from './components/users/User';\r\nimport NotFound from './components/pages/NotFound';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar title=\"GitHub User Finder\" />\r\n            <div className=\"container\">\r\n              <Alert />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/user/:login\" component={User} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}